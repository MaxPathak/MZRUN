#include <graphics.h>
#include <stdlib.h>
#include <stdio.h>
#include <conio.h>

char map[][60] = {
   "############################################################",
   "#@..#...............#.#....................................#",
   "#...#...#.#........#..#...............*....................#",
   "###.#...#.#..##...#...#.....*..#...........................#",
   "#....####.####*###....#.......###..........................#",
   "#.....................#.......#.......*....................#",
   "#...........**........#......###...........................#",
   "#.....*.......................#............................#",
   "#.................*...........#..*......*..................#",
   "#......*...#...#............###............................#",
   "#####.....#....#......#....##.###.....*....................#",
   "#....#...#..*..##...#.#.........#..........................#",
   "#....#*.#............#.........#...........................#",
   "#.....##..........*...........#..*......*..................#",
   "#......*.....#.......#.......#.............................#",
   "#..........##.#......#..*...#.#....*.......................#",
   "#........*#.#..*....#..........#...........................#",
   "#........##.....................#....*.....................#",
   "#*.........#................*....#........................g#",
   "############################################################"
};

int main(void)
{
   /* request auto detection */
   int gdriver = DETECT, gmode, errorcode;
   char msg[80];

   /* initialize graphics and local variables */
   initgraph(&gdriver, &gmode, "C:\\TURBOC3\\BGI");

   /* read result of initialization */
   errorcode = graphresult();
   if (errorcode != grOk)  /* an error occurred */
   {
	  printf("Graphics error: %s\n", grapherrormsg(errorcode));
	  printf("Press any key to halt:");
	  getch();
	  exit(1); /* terminate with an error code */
   }

   /*for(int i = 0; i < 20; i++) {
      for(int j = 0; j < 60; j++) {
         sprintf(msg, "%c", map[i][j]);
         outtextxy(1+j, 1+i, msg);
      }
   }*/
   outtextxy(0, 0, "Hello");
   outtextxy(40, 0, "Hello");

   /* clean up */
   getch();
   closegraph();
   return 0;
}